{"ast":null,"code":"var _jsxFileName = \"/home/adnan/Desktop/pocs/employee-management/client/src/components/SelectComponent/SelectComponent.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/core\";\nimport omit from \"lodash/omit\";\nimport FormHelperText from \"@material-ui/core/FormHelperText/FormHelperText\";\n\nclass SelectComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.itemRenderer = option => {\n      if (this.props.itemRenderer) {\n        return this.props.itemRenderer(option);\n      } else {\n        return React.createElement(React.Fragment, null, option[this.props.displayField]);\n      }\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        value: event.target.value\n      });\n      this.props.input.onChange(event.target.value);\n    };\n\n    this.state = {\n      value: props.input.value || \"\",\n      disabled: props.disabled\n    };\n  }\n\n  render() {\n    const {\n      classes,\n      disabled,\n      valueField,\n      meta\n    } = this.props;\n    const tourid = `react_tour__${this.props.input.name}`;\n    return React.createElement(FormControl, Object.assign({}, omit(this.props, [\"classes\", \"helperText\", \"valueField\", \"displayField\", \"dataResponse\", \"itemRenderer\"]), {\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(InputLabel, {\n      htmlFor: this.props.labelfor,\n      classes: {\n        root: classes.root\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, this.props.labelname), React.createElement(Select, {\n      tourid: tourid,\n      value: this.state.value,\n      onChange: this.handleChange,\n      disabled: disabled,\n      input: React.createElement(OutlinedInput, {\n        labelWidth: this.props.labelwidth,\n        name: this.props.input.name,\n        id: this.props.labelfor,\n        error: meta && meta.touched && !!meta.error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.props.options.map((option, key) => React.createElement(MenuItem, {\n      value: option[valueField],\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, this.itemRenderer(option)))), this.props.helperText && React.createElement(FormHelperText, {\n      classes: {\n        root: classes.formHelperRoot\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, this.props.helperText));\n  }\n\n}\n\nSelectComponent.propTypes = {\n  classes: PropTypes.object,\n  input: PropTypes.object,\n  labelname: PropTypes.string,\n  labelwidth: PropTypes.number,\n  options: PropTypes.array,\n  labelfor: PropTypes.string.isRequired,\n  disabled: PropTypes.bool,\n  helperText: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  valueField: PropTypes.string,\n  displayField: PropTypes.string,\n  itemRenderer: PropTypes.func,\n  meta: PropTypes.object\n};\nSelectComponent.defaultProps = {\n  classes: {},\n  input: {\n    value: \"\",\n    name: \"sample\",\n    onChange: () => {}\n  },\n  options: [],\n  labelfor: \"labelFor\",\n  valueField: \"value\",\n  displayField: \"name\"\n};\nexport default withStyles(styles)(SelectComponent);","map":{"version":3,"sources":["/home/adnan/Desktop/pocs/employee-management/client/src/components/SelectComponent/SelectComponent.js"],"names":["React","Component","PropTypes","FormControl","Select","MenuItem","InputLabel","OutlinedInput","styles","withStyles","omit","FormHelperText","SelectComponent","constructor","props","itemRenderer","option","displayField","handleChange","event","setState","value","target","input","onChange","state","disabled","render","classes","valueField","meta","tourid","name","labelfor","root","labelname","labelwidth","touched","error","options","map","key","helperText","formHelperRoot","propTypes","object","string","number","array","isRequired","bool","oneOfType","node","func","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/core\";\nimport omit from \"lodash/omit\";\nimport FormHelperText from \"@material-ui/core/FormHelperText/FormHelperText\";\n\nclass SelectComponent extends Component {\n    static propTypes = {\n        classes: PropTypes.object,\n        input: PropTypes.object,\n        labelname: PropTypes.string,\n        labelwidth: PropTypes.number,\n        options: PropTypes.array,\n        labelfor: PropTypes.string.isRequired,\n        disabled: PropTypes.bool,\n        helperText: PropTypes.oneOfType([\n            PropTypes.string, PropTypes.node\n        ]),\n        valueField: PropTypes.string,\n        displayField: PropTypes.string,\n        itemRenderer: PropTypes.func,\n        meta:PropTypes.object\n    }\n\n    static defaultProps = {\n        classes: {},\n        input: {\n            value: \"\",\n            name: \"sample\",\n            onChange: () => {}\n        },\n        options: [],\n        labelfor: \"labelFor\",\n        valueField: \"value\",\n        displayField: \"name\"\n    }\n\n    itemRenderer = (option) => {\n        if (this.props.itemRenderer) {\n            return this.props.itemRenderer(option);\n        } else {\n            return (\n                <>\n                    {option[this.props.displayField]}\n                </>\n            );\n        }\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: props.input.value || \"\",\n            disabled: props.disabled\n        };\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            value: event.target.value\n        });\n        this.props.input.onChange(event.target.value);\n    }\n\n    render() {\n        const { classes, disabled, valueField, meta } = this.props;\n        const tourid = `react_tour__${this.props.input.name}`;\n        return (\n            <FormControl {...omit(this.props, [\n                \"classes\", \"helperText\", \"valueField\", \"displayField\", \"dataResponse\", \"itemRenderer\"\n            ])} variant=\"outlined\"\n            >\n                <InputLabel htmlFor={this.props.labelfor} classes={{root: classes.root}}>\n                    {this.props.labelname}\n                </InputLabel>\n                <Select\n                    tourid={tourid}\n                    value={this.state.value}\n                    onChange={this.handleChange}\n                    disabled={disabled}\n                    input={\n                        <OutlinedInput\n                            labelWidth={this.props.labelwidth} \n                            name={this.props.input.name} \n                            id={this.props.labelfor}\n                            error={meta && meta.touched && !!meta.error}\n                        />\n                    }\n                >\n                    {this.props.options.map((option, key) => (\n                        <MenuItem value={option[valueField]} key={key}>\n                            {this.itemRenderer(option)}\n                        </MenuItem>\n                    ))}\n                </Select>\n                {this.props.helperText &&\n                    <FormHelperText classes={{root: classes.formHelperRoot}}>\n                        {this.props.helperText}\n                    </FormHelperText>\n                }\n            </FormControl>\n        );\n    }\n}\n\nexport default withStyles(styles)(SelectComponent);\n"]},"metadata":{},"sourceType":"module"}