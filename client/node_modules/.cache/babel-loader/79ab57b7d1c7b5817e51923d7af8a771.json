{"ast":null,"code":"import { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport EntriesManager from \"./entries-manager\";\nimport Actions from \"./entries-manager-actions\";\nimport sagaMiddleware from \"../../mystore/sagamiddleware\";\nimport entriesMnaagerSagas from \"\";\n\nconst mapStateToProps = state => {\n  return {\n    entries: state.EntriesManager.entries\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    _fetchEntries: bindActionCreators(Actions._fetchEntries, dispatch),\n    _addEntry: bindActionCreators(Actions._addEntry, dispatch)\n  };\n};\n\nsagaMiddleware.run(userManagerSagas);\nexport default connect( //   mapStateToProps,\nnull, mapDispatchToProps)(EntriesManager);","map":{"version":3,"sources":["/home/adnan/Desktop/pocs/employee-management/src/containers/EntriesManager/index.js"],"names":["connect","bindActionCreators","EntriesManager","Actions","sagaMiddleware","entriesMnaagerSagas","mapStateToProps","state","entries","mapDispatchToProps","dispatch","_fetchEntries","_addEntry","run","userManagerSagas"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,mBAAP,MAAgC,EAAhC;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,OAAO,EAACD,KAAK,CAACL,cAAN,CAAqBM;AADxB,GAAP;AAGD,CAJD;;AAMA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAM;AACJC,IAAAA,aAAa,EAAEV,kBAAkB,CAACE,OAAO,CAACQ,aAAT,EAAwBD,QAAxB,CAD7B;AAEJE,IAAAA,SAAS,EAACX,kBAAkB,CAACE,OAAO,CAACS,SAAT,EAAoBF,QAApB;AAFxB,GAAN;AAGE,CAJJ;;AAKEN,cAAc,CAACS,GAAf,CAAmBC,gBAAnB;AACF,eAAed,OAAO,EACtB;AACE,IAFoB,EAGpBS,kBAHoB,CAAP,CAIbP,cAJa,CAAf","sourcesContent":["import { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport EntriesManager from \"./entries-manager\";\nimport Actions from \"./entries-manager-actions\";\nimport sagaMiddleware from \"../../mystore/sagamiddleware\";\nimport entriesMnaagerSagas from \"\"\n\nconst mapStateToProps = (state) => {\n  return {\n    entries:state.EntriesManager.entries\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return{\n    _fetchEntries: bindActionCreators(Actions._fetchEntries, dispatch),\n    _addEntry:bindActionCreators(Actions._addEntry, dispatch)\n  }};\n  sagaMiddleware.run(userManagerSagas)\nexport default connect(\n//   mapStateToProps,\n  null,\n  mapDispatchToProps,\n)(EntriesManager);\n"]},"metadata":{},"sourceType":"module"}