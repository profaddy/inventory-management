{"ast":null,"code":"var _jsxFileName = \"/home/adnan/Desktop/pocs/employee-management/src/components/EntryForm/EntryForm.js\";\nimport React from 'react';\nimport { Form, Field } from \"react-final-form\";\nimport ToggleComponent from \"components/ToggleComponent/ToggleComponent\";\nimport { Divider, Button, withStyles } from \"@material-ui/core\";\nimport styles from \"./styles\"; // import SelectComponent from \"components/SelectComponent/SelectComponent\";\n\nimport InputField from \"components/fields/InputField/InputField\"; // import get from \"lodash/get\";\n// import omit from \"lodash/omit\";\n// import moment from \"moment\";\n// import Tooltip from \"@material-ui/core/Tooltip/Tooltip\";\n// import { validator } from \"./validator\";\n\nconst EntryForm = ({\n  classes,\n  onCancel\n}) => {\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.flex1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Form, {\n    onSubmit: values => {\n      console.log(values); // if (values.omnisci.installation.licenseOption !== \"new\") {\n      //     values.omnisci.installation.licenseId = values.omnisci.installation.licenseOption;\n      // }\n      // this.props.onCreate(omit(values, [\n      //     \"omnisci.installation.licenseOption\"\n      // ]));\n    } // initialValues={this.state.config}\n    // validate={validator}\n    ,\n    render: ({\n      handleSubmit,\n      pristine,\n      invalid,\n      values\n    }) => React.createElement(\"form\", {\n      id: \"add-new-entry\",\n      autoComplete: \"off\",\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.formContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.flex3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"omnisci.installation.name\",\n      component: InputField,\n      label: \"Installation Name\",\n      margin: \"normal\",\n      variant: \"outlined\",\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: classes.installTypeFieldWrap,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.label,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Installation Mode\"), React.createElement(Field, {\n      name: \"omnisci.installation.type\",\n      options: [{\n        name: \"Standalone\",\n        value: \"standalone\"\n      }, {\n        name: \"Cluster\",\n        value: \"cluster\"\n      }],\n      width: 150,\n      component: ToggleComponent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: classes.installTypeFieldWrap,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.label,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Installation Type\"), React.createElement(Field, {\n      name: \"omnisci.installation.is_containerised\",\n      options: [{\n        name: \"Containerized\",\n        // contentRenderer: this.getDockerContent(),\n        value: true\n      }, {\n        name: \"Non Containerized\",\n        // contentRenderer: this.getLinuxContent(),\n        value: false\n      }],\n      width: 65,\n      height: 45,\n      component: ToggleComponent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: classes.flex1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.modalBodyBottomToolbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"outlined\",\n    onClick: onCancel,\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(Button, {\n    form: \"add-new-entry\",\n    variant: \"contained\",\n    type: \"submit\",\n    color: \"primary\",\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Create\")))));\n};\n\nexport default withStyles(styles)(EntryForm);","map":{"version":3,"sources":["/home/adnan/Desktop/pocs/employee-management/src/components/EntryForm/EntryForm.js"],"names":["React","Form","Field","ToggleComponent","Divider","Button","withStyles","styles","InputField","EntryForm","classes","onCancel","container","flex1","values","console","log","handleSubmit","pristine","invalid","formContainer","flex3","installTypeFieldWrap","label","name","value","modalBodyBottomToolbar","button"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Form, Field} from \"react-final-form\";\nimport ToggleComponent from \"components/ToggleComponent/ToggleComponent\";\nimport { Divider, Button, withStyles } from \"@material-ui/core\";\nimport styles from \"./styles\";\n// import SelectComponent from \"components/SelectComponent/SelectComponent\";\nimport InputField from \"components/fields/InputField/InputField\";\n// import get from \"lodash/get\";\n// import omit from \"lodash/omit\";\n// import moment from \"moment\";\n// import Tooltip from \"@material-ui/core/Tooltip/Tooltip\";\n// import { validator } from \"./validator\";\n\nconst EntryForm = ({classes,onCancel}) => {\n    return (\n        <>\n        <div className={classes.container}>\n            <div className={classes.flex1}>\n                <Form\n                    onSubmit={(values)=> {\n                        console.log(values)\n                        // if (values.omnisci.installation.licenseOption !== \"new\") {\n                        //     values.omnisci.installation.licenseId = values.omnisci.installation.licenseOption;\n                        // }\n                        // this.props.onCreate(omit(values, [\n                        //     \"omnisci.installation.licenseOption\"\n                        // ]));\n                    }}\n                    // initialValues={this.state.config}\n                    // validate={validator}\n                    render={({handleSubmit, pristine, invalid, values}) => (\n                        <form id=\"add-new-entry\" autoComplete=\"off\" onSubmit={handleSubmit}>\n                            {/* <FormSpy onChange={state => this.updateDetails(state.values)} /> */}\n                            <div className={classes.formContainer}>\n                                <div className={classes.flex3}>\n                                    <Field \n                                        name=\"omnisci.installation.name\"\n                                        component={InputField}\n                                        label=\"Installation Name\"\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        fullWidth\n                                    />\n                                    <div className={classes.installTypeFieldWrap}>\n                                        <div className={classes.label}>\n                                            Installation Mode\n                                        </div>\n                                        <Field \n                                            name=\"omnisci.installation.type\"\n                                            options={[\n                                                {\n                                                    name: \"Standalone\",\n                                                    value: \"standalone\"\n                                                }, {\n                                                    name: \"Cluster\",\n                                                    value: \"cluster\"\n                                                }\n                                            ]}\n                                            width={150}\n                                            component={ToggleComponent}\n                                        />\n                                    </div>\n                                    <div className={classes.installTypeFieldWrap}>\n                                        <div className={classes.label}>\n                                            Installation Type\n                                        </div>\n                                        <Field \n                                            name=\"omnisci.installation.is_containerised\"\n                                            options={[\n                                                {\n                                                    name: \"Containerized\",\n                                                    // contentRenderer: this.getDockerContent(),\n                                                    value: true\n                                                }, {\n                                                    name: \"Non Containerized\",\n                                                    // contentRenderer: this.getLinuxContent(),\n                                                    value: false\n                                                }\n                                            ]}\n                                            width={65}\n                                            height={45}\n                                            component={ToggleComponent}\n                                        />\n                                    </div>\n                                    <div>\n                                    </div>\n                                </div>\n                                <div className={classes.flex1}></div>\n                            </div>\n                        </form>\n                    )}\n                />\n            </div>\n            <div>\n                <Divider />\n                <div className={classes.modalBodyBottomToolbar}>\n                    <Button variant=\"outlined\" onClick={onCancel} className={classes.button}>\n                        Cancel\n                    </Button>\n                    <Button\n                        form=\"add-new-entry\"\n                        variant=\"contained\"\n                        type={\"submit\"}\n                        color=\"primary\"\n                        className={classes.button}\n                    >\n                        Create\n                    </Button>\n                </div>\n            </div>\n        </div>\n    </>\n    );\n};\n\nexport default withStyles(styles)(EntryForm);"]},"metadata":{},"sourceType":"module"}