{"ast":null,"code":"var _jsxFileName = \"/home/adnan/Desktop/pocs/employee-management/src/components/EntryForm/EntryForm.js\";\nimport React, { useState } from 'react';\nimport { Form, Field } from \"react-final-form\";\nimport { Divider, Button, withStyles } from \"@material-ui/core\";\nimport styles from \"./styles\";\nimport SelectComponent from \"../../components/SelectComponent/SelectComponent\";\nimport InputField from \"../../components/InputField/InputField\";\nimport ToggleComponent from \"../../components/ToggleComponent/ToggleComponent\"; // import get from \"lodash/get\";\n// import omit from \"lodash/omit\";\n// import moment from \"moment\";\n// import Tooltip from \"@material-ui/core/Tooltip/Tooltip\";\n// import { validator } from \"./validator\";\n\nlet quantitiesList = [];\n\nfor (let i = 0; i < 100; i++) {\n  quantitiesList.push({\n    name: i,\n    value: i\n  });\n}\n\nconst EntryForm = ({\n  classes,\n  onCancel\n}) => {\n  const [initialValues, setCount] = useState({\n    entry_type: \"taken\"\n  });\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.flex1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Form, {\n    onSubmit: values => {\n      console.log(values); // if (values.omnisci.installation.licenseOption !== \"new\") {\n      //     values.omnisci.installation.licenseId = values.omnisci.installation.licenseOption;\n      // }\n      // this.props.onCreate(omit(values, [\n      //     \"omnisci.installation.licenseOption\"\n      // ]));\n    },\n    initialValues: initialValues // validate={validator}\n    ,\n    render: ({\n      handleSubmit,\n      pristine,\n      invalid,\n      values\n    }) => React.createElement(\"form\", {\n      id: \"add-new-entry\",\n      autoComplete: \"off\",\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.formContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.flex3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        width: 200\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"user\",\n      options: [{\n        name: \"U1\",\n        value: \"u1\"\n      }, {\n        name: \"U2\",\n        value: \"u2\"\n      }, {\n        name: \"U3\",\n        value: \"u3\"\n      }],\n      labelfor: \"user\",\n      labelname: \"Select User\",\n      component: SelectComponent,\n      fullWidth: true,\n      labelwidth: 120,\n      helperText: React.createElement(\"span\", {\n        style: {\n          paddingBottom: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        width: 200\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"inventory\",\n      options: [{\n        name: \"I1\",\n        value: \"i1\"\n      }, {\n        name: \"I2\",\n        value: \"i2\"\n      }, {\n        name: \"I3\",\n        value: \"i3\"\n      }],\n      labelfor: \"inventory\",\n      labelname: \"Select Inventory\",\n      component: SelectComponent,\n      fullWidth: true,\n      labelwidth: 120,\n      helperText: React.createElement(\"span\", {\n        style: {\n          paddingBottom: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        width: 200\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"entry_value\",\n      options: getQuantitiesList,\n      labelfor: \"entry_value\",\n      labelname: \"Select Quantity\",\n      component: SelectComponent,\n      fullWidth: true,\n      labelwidth: 120,\n      helperText: React.createElement(\"span\", {\n        style: {\n          paddingBottom: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: classes.installTypeFieldWrap,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.label,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Entry Type\"), React.createElement(Field, {\n      name: \"entry_type\",\n      options: [{\n        name: \"Taken\",\n        value: \"taken\"\n      }, {\n        name: \"Consumed\",\n        value: \"consumed\"\n      }, {\n        name: \"Returned\",\n        value: \"returned\"\n      }],\n      width: 150,\n      component: ToggleComponent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: classes.flex1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.modalBodyBottomToolbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"outlined\",\n    onClick: onCancel,\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(Button, {\n    form: \"add-new-entry\",\n    variant: \"contained\",\n    type: \"submit\",\n    color: \"primary\",\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"Create\")))));\n};\n\nexport default withStyles(styles)(EntryForm);","map":{"version":3,"sources":["/home/adnan/Desktop/pocs/employee-management/src/components/EntryForm/EntryForm.js"],"names":["React","useState","Form","Field","Divider","Button","withStyles","styles","SelectComponent","InputField","ToggleComponent","quantitiesList","i","push","name","value","EntryForm","classes","onCancel","initialValues","setCount","entry_type","container","flex1","values","console","log","handleSubmit","pristine","invalid","formContainer","flex3","width","paddingBottom","getQuantitiesList","installTypeFieldWrap","label","modalBodyBottomToolbar","button"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Form, Field } from \"react-final-form\";\nimport { Divider, Button, withStyles } from \"@material-ui/core\";\nimport styles from \"./styles\";\nimport SelectComponent from \"../../components/SelectComponent/SelectComponent\";\nimport InputField from \"../../components/InputField/InputField\";\nimport ToggleComponent from \"../../components/ToggleComponent/ToggleComponent\";\n// import get from \"lodash/get\";\n// import omit from \"lodash/omit\";\n// import moment from \"moment\";\n// import Tooltip from \"@material-ui/core/Tooltip/Tooltip\";\n// import { validator } from \"./validator\";\n\nlet quantitiesList = [];\nfor(let i =0 ; i<100; i++){\n    quantitiesList.push({name:i,value:i})\n}\nconst EntryForm = ({ classes, onCancel }) => {\n    const [initialValues, setCount] = useState({\n        entry_type:\"taken\"\n    });\n\n    return (\n        <>\n            <div className={classes.container}>\n                <div className={classes.flex1}>\n                    <Form\n                        onSubmit={(values) => {\n                            console.log(values)\n                            // if (values.omnisci.installation.licenseOption !== \"new\") {\n                            //     values.omnisci.installation.licenseId = values.omnisci.installation.licenseOption;\n                            // }\n                            // this.props.onCreate(omit(values, [\n                            //     \"omnisci.installation.licenseOption\"\n                            // ]));\n                        }}\n                        initialValues={initialValues}\n                        // validate={validator}\n                        render={({ handleSubmit, pristine, invalid, values }) => (\n                            <form id=\"add-new-entry\" autoComplete=\"off\" onSubmit={handleSubmit}>\n                                {/* <FormSpy onChange={state => this.updateDetails(state.values)} /> */}\n                                <div className={classes.formContainer}>\n                                    <div className={classes.flex3}>\n                                    <div style={{ width: 200 }}>\n                                            <Field\n                                                name={\"user\"}\n                                                options={[\n                                                    {\n                                                        name: \"U1\",\n                                                        value: \"u1\"\n                                                    }, {\n                                                        name: \"U2\",\n                                                        value: \"u2\"\n                                                    }, {\n                                                        name: \"U3\",\n                                                        value: \"u3\"\n                                                    }\n                                                ]}\n                                                labelfor={\"user\"}\n                                                labelname={\"Select User\"}\n                                                component={SelectComponent}\n                                                fullWidth={true}\n                                                labelwidth={120}\n                                                helperText={(\n                                                    <span style={{ paddingBottom: 10 }}>\n\n                                                    </span>\n                                                )} />\n                                        </div>\n                                        <div style={{ width: 200 }}>\n                                            <Field\n                                                name={\"inventory\"}\n                                                options={[\n                                                    {\n                                                        name: \"I1\",\n                                                        value: \"i1\"\n                                                    }, {\n                                                        name: \"I2\",\n                                                        value: \"i2\"\n                                                    }, {\n                                                        name: \"I3\",\n                                                        value: \"i3\"\n                                                    }\n                                                ]}\n                                                labelfor={\"inventory\"}\n                                                labelname={\"Select Inventory\"}\n                                                component={SelectComponent}\n                                                fullWidth={true}\n                                                labelwidth={120}\n                                                helperText={(\n                                                    <span style={{ paddingBottom: 10 }}>\n\n                                                    </span>\n                                                )} />\n                                        </div>\n                                        <div style={{ width: 200 }}>\n                                            <Field\n                                                name={\"entry_value\"}\n                                                options={getQuantitiesList}\n                                                labelfor={\"entry_value\"}\n                                                labelname={\"Select Quantity\"}\n                                                component={SelectComponent}\n                                                fullWidth={true}\n                                                labelwidth={120}\n                                                helperText={(\n                                                    <span style={{ paddingBottom: 10 }}>\n\n                                                    </span>\n                                                )} />\n                                        </div>\n                                        <div className={classes.installTypeFieldWrap}>\n                                            <div className={classes.label}>\n                                                Entry Type\n                                            </div>\n                                            <Field\n                                                name=\"entry_type\"\n                                                options={[\n                                                    {\n                                                        name: \"Taken\",\n                                                        value: \"taken\"\n                                                    }, {\n                                                        name: \"Consumed\",\n                                                        value: \"consumed\"\n                                                    }, {\n                                                        name: \"Returned\",\n                                                        value: \"returned\"\n                                                    }\n                                                ]}\n                                                width={150}\n                                                component={ToggleComponent}\n                                            />\n                                        </div>\n                                        <div>\n                                        </div>\n                                    </div>\n                                    <div className={classes.flex1}></div>\n                                </div>\n                            </form>\n                        )}\n                    />\n                </div>\n                <div>\n                    <Divider />\n                    <div className={classes.modalBodyBottomToolbar}>\n                        <Button variant=\"outlined\" onClick={onCancel} className={classes.button}>\n                            Cancel\n                    </Button>\n                        <Button\n                            form=\"add-new-entry\"\n                            variant=\"contained\"\n                            type={\"submit\"}\n                            color=\"primary\"\n                            className={classes.button}\n                        >\n                            Create\n                    </Button>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default withStyles(styles)(EntryForm);"]},"metadata":{},"sourceType":"module"}