{"ast":null,"code":"import ActionTypes from './user-manager-action-constants';\nconst INITIAL_STATE = {\n  loggedIn: false,\n  username: \"\",\n  users: []\n};\n\nconst Reducer = (state = INITIAL_STATE, action) => {\n  console.log(action, \"reducer\");\n\n  switch (action.type) {\n    case ActionTypes.ADD_USER_SUCCESS:\n      let users = [...state.users];\n      users = users.concat(action.user);\n      return { ...state,\n        users: users\n      };\n\n    case ActionTypes.FETCH_USER_SUCCESS:\n      return { ...state,\n        ...action.payload\n      };\n    // case REHYDRATE:\n    //   return {\n    //     ...state,\n    //     users: [] \n    //   };\n\n    default:\n      return state;\n  }\n};\n\nexport default Reducer;","map":{"version":3,"sources":["/home/adnan/Desktop/pocs/employee-management/app/client/src/containers/UserManager/user-manager-reducer.js"],"names":["ActionTypes","INITIAL_STATE","loggedIn","username","users","Reducer","state","action","console","log","type","ADD_USER_SUCCESS","concat","user","FETCH_USER_SUCCESS","payload"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,iCAAxB;AAGA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,QAAQ,EAAC,KADW;AAEpBC,EAAAA,QAAQ,EAAC,EAFW;AAGpBC,EAAAA,KAAK,EAAC;AAHc,CAAtB;;AAMA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGL,aAAT,EAAwBM,MAAxB,KAAmC;AACjDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EAAmB,SAAnB;;AACA,UAAOA,MAAM,CAACG,IAAd;AACE,SAAKV,WAAW,CAACW,gBAAjB;AACE,UAAIP,KAAK,GAAG,CACV,GAAGE,KAAK,CAACF,KADC,CAAZ;AAGAA,MAAAA,KAAK,GAAGA,KAAK,CAACQ,MAAN,CAAaL,MAAM,CAACM,IAApB,CAAR;AACA,aAAM,EACJ,GAAGP,KADC;AAEHF,QAAAA,KAAK,EAACA;AAFH,OAAN;;AAIF,SAAKJ,WAAW,CAACc,kBAAjB;AACE,aAAM,EACJ,GAAGR,KADC;AAEJ,WAAGC,MAAM,CAACQ;AAFN,OAAN;AAIA;AACA;AACA;AACA;AACA;;AACF;AACE,aAAOT,KAAP;AArBJ;AAuBD,CAzBD;;AA2BA,eAAeD,OAAf","sourcesContent":["import ActionTypes from './user-manager-action-constants';\n\n\nconst INITIAL_STATE = {\n  loggedIn:false,\n  username:\"\",\n  users:[]\n};\n\nconst Reducer = (state = INITIAL_STATE, action) => {\n  console.log(action,\"reducer\")\n  switch(action.type){\n    case ActionTypes.ADD_USER_SUCCESS:\n      let users = [\n        ...state.users\n    ];\n      users = users.concat(action.user);\n      return{\n        ...state,\n         users:users\n      }\n    case ActionTypes.FETCH_USER_SUCCESS:\n      return{\n        ...state,\n        ...action.payload\n      }\n      // case REHYDRATE:\n      //   return {\n      //     ...state,\n      //     users: [] \n      //   };\n    default:\n      return state\n  }\n}\n\nexport default Reducer;\n\n"]},"metadata":{},"sourceType":"module"}