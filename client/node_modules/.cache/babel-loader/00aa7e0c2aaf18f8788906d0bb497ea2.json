{"ast":null,"code":"var _jsxFileName = \"/home/adnan/Desktop/pocs/employee-management/src/containers/EntriesManager/entries-manager.js\";\nimport React, { Component } from 'react';\nimport MUIDataTable from \"mui-datatables\";\nimport Button from \"@material-ui/core/Button\";\nimport ModalWrapper from \"../../components/ModalWrapper/ModalWrapper\";\n\nclass EntriesManager extends Component {\n  constructor(props) {\n    super(props);\n\n    this.openAddEntryModal = () => {\n      this.setState({\n        addEntryModalShowing: true\n      });\n    };\n\n    this.closeAddEntryModal = () => {\n      this.setState({\n        addEntryModalShowing: false\n      });\n    };\n\n    this.state = {\n      addEntryModalShowing: false\n    };\n  }\n\n  componentDidMount() {\n    this.props._fetchEntries();\n\n    console.log(this.props.entries);\n  }\n\n  render() {\n    console.log(this.props.entries, \"kuch bata\");\n    const options = {\n      filterType: \"dropdown\",\n      responsive: \"scroll\"\n    };\n    const columns = [\"Inventory\", \"Username\", \"created_at\", \"taken\", \"consumed\", \"returned\", \"remaining\"];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.openAddEntryModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Add Entry\")), React.createElement(MUIDataTable, {\n      title: \"ACME Employee list\",\n      data: this.props.entries,\n      columns: columns,\n      options: options,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(ModalWrapper, {\n      title: \"Add Entry\",\n      isOpen: true,\n      minWidth: 720,\n      showBottomToolbar: false,\n      showCloseIcon: true,\n      onClose: this.closeEntryModal,\n      showResizeOptions: false // toggleWindowSize={this.toggleWindowSize}\n      // isMaximize={isMaximize}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default EntriesManager;","map":{"version":3,"sources":["/home/adnan/Desktop/pocs/employee-management/src/containers/EntriesManager/entries-manager.js"],"names":["React","Component","MUIDataTable","Button","ModalWrapper","EntriesManager","constructor","props","openAddEntryModal","setState","addEntryModalShowing","closeAddEntryModal","state","componentDidMount","_fetchEntries","console","log","entries","render","options","filterType","responsive","columns","closeEntryModal"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,YAAP,MAAyB,4CAAzB;;AAEA,MAAMC,cAAN,SAA6BJ,SAA7B,CAAuC;AACnCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAUnBC,iBAVmB,GAUC,MAAM;AACtB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,oBAAoB,EAAE;AAAxB,OAAd;AACH,KAZkB;;AAAA,SAanBC,kBAbmB,GAaE,MAAM;AACvB,WAAKF,QAAL,CAAc;AAAEC,QAAAA,oBAAoB,EAAE;AAAxB,OAAd;AACH,KAfkB;;AAEf,SAAKE,KAAL,GAAa;AACTF,MAAAA,oBAAoB,EAAE;AADb,KAAb;AAGH;;AACDG,EAAAA,iBAAiB,GAAG;AAChB,SAAKN,KAAL,CAAWO,aAAX;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAL,CAAWU,OAAvB;AACH;;AAODC,EAAAA,MAAM,GAAG;AACLH,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAL,CAAWU,OAAvB,EAAgC,WAAhC;AACA,UAAME,OAAO,GAAG;AACZC,MAAAA,UAAU,EAAE,UADA;AAEZC,MAAAA,UAAU,EAAE;AAFA,KAAhB;AAIA,UAAMC,OAAO,GAAG,CAAC,WAAD,EAAc,UAAd,EAA0B,YAA1B,EAAwC,OAAxC,EAAiD,UAAjD,EAA6D,UAA7D,EAAyE,WAAzE,CAAhB;AAEA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAwB,MAAA,OAAO,EAAE,KAAKd,iBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CADJ,EAII,oBAAC,YAAD;AACI,MAAA,KAAK,EAAE,oBADX;AAEI,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWU,OAFrB;AAGI,MAAA,OAAO,EAAEK,OAHb;AAII,MAAA,OAAO,EAAEH,OAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAUI,oBAAC,YAAD;AACI,MAAA,KAAK,EAAE,WADX;AAEI,MAAA,MAAM,EAAE,IAFZ;AAGI,MAAA,QAAQ,EAAE,GAHd;AAII,MAAA,iBAAiB,EAAE,KAJvB;AAKI,MAAA,aAAa,EAAE,IALnB;AAMI,MAAA,OAAO,EAAE,KAAKI,eANlB;AAOI,MAAA,iBAAiB,EAAE,KAPvB,CAQI;AACA;AATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,CADJ;AAwBH;;AAjDkC;;AAoDvC,eAAelB,cAAf","sourcesContent":["import React, { Component } from 'react';\nimport MUIDataTable from \"mui-datatables\";\nimport Button from \"@material-ui/core/Button\";\nimport ModalWrapper from \"../../components/ModalWrapper/ModalWrapper\"\n\nclass EntriesManager extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            addEntryModalShowing: false\n        }\n    }\n    componentDidMount() {\n        this.props._fetchEntries();\n        console.log(this.props.entries);\n    }\n    openAddEntryModal = () => {\n        this.setState({ addEntryModalShowing: true });\n    }\n    closeAddEntryModal = () => {\n        this.setState({ addEntryModalShowing: false });\n    }\n    render() {\n        console.log(this.props.entries, \"kuch bata\")\n        const options = {\n            filterType: \"dropdown\",\n            responsive: \"scroll\"\n        };\n        const columns = [\"Inventory\", \"Username\", \"created_at\", \"taken\", \"consumed\", \"returned\", \"remaining\"];\n\n        return (\n            <div>\n                <div>\n                    <Button color=\"primary\" onClick={this.openAddEntryModal}>Add Entry</Button>\n                </div>\n                <MUIDataTable\n                    title={\"ACME Employee list\"}\n                    data={this.props.entries}\n                    columns={columns}\n                    options={options}\n                />\n                <ModalWrapper\n                    title={\"Add Entry\"}\n                    isOpen={true}\n                    minWidth={720}\n                    showBottomToolbar={false}\n                    showCloseIcon={true}\n                    onClose={this.closeEntryModal}\n                    showResizeOptions={false}\n                    // toggleWindowSize={this.toggleWindowSize}\n                    // isMaximize={isMaximize}\n                ></ModalWrapper>\n            </div>\n        );\n    }\n}\n\nexport default EntriesManager;"]},"metadata":{},"sourceType":"module"}