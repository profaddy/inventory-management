{"ast":null,"code":"import Actions from \"./entries-manager-action-constants\";\nimport { all, put, call, takeEvery } from \"redux-saga/effects\";\nimport { fetchEntries } from \"./entries-manager-api.js\";\n\nfunction* addEntriesSaga(action) {\n  try {\n    console.log(action);\n    yield put({\n      type: Actions.ADD_ENTRY_SUCCESS\n    });\n  } catch (error) {\n    yield put({\n      type: Actions.ADD_ENTRY_FAILURE\n    });\n    console.log(\"error occured while fetching entries\", error);\n  }\n}\n\nfunction* fetchEntriesSaga(action) {\n  try {\n    console.log(action);\n    const {\n      data\n    } = yield call(fetchEntries);\n    const {\n      entries\n    } = data;\n    const formattedEntries = entries.reduce((acc, item) => {\n      const entry = [item.product_name, item.user_name, item.taken, item.created_at, item.consumed, item.returned, item.remaining];\n      acc.push(entry);\n      return acc;\n    }, []);\n    yield put({\n      type: Actions.FETCH_ENTRY_SUCCESS,\n      data: formattedEntries\n    });\n  } catch (error) {\n    yield put({\n      type: Actions.FETCH_ENTRY_FAILURE\n    });\n    console.log(\"error occured while fetching entries\", error);\n  }\n}\n\nexport default function* entriesMnaagerSagas() {\n  yield all([takeEvery(Actions.ADD_ENTRY_REQUEST, addEntriesSaga), takeEvery(Actions.FETCH_ENTRY_REQUEST, fetchEntriesSaga)]);\n}","map":{"version":3,"sources":["/home/adnan/Desktop/pocs/employee-management/src/containers/EntriesManager/entries-manager-sagas.js"],"names":["Actions","all","put","call","takeEvery","fetchEntries","addEntriesSaga","action","console","log","type","ADD_ENTRY_SUCCESS","error","ADD_ENTRY_FAILURE","fetchEntriesSaga","data","entries","formattedEntries","reduce","acc","item","entry","product_name","user_name","taken","created_at","consumed","returned","remaining","push","FETCH_ENTRY_SUCCESS","FETCH_ENTRY_FAILURE","entriesMnaagerSagas","ADD_ENTRY_REQUEST","FETCH_ENTRY_REQUEST"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,oCAApB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,SAAzB,QAA0C,oBAA1C;AACA,SAASC,YAAT,QAA6B,0BAA7B;;AACA,UAAUC,cAAV,CAAyBC,MAAzB,EAAiC;AAC7B,MAAI;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,UAAML,GAAG,CAAC;AAAEQ,MAAAA,IAAI,EAAEV,OAAO,CAACW;AAAhB,KAAD,CAAT;AACH,GAHD,CAGE,OAAOC,KAAP,EAAc;AACZ,UAAMV,GAAG,CAAC;AAAEQ,MAAAA,IAAI,EAAEV,OAAO,CAACa;AAAhB,KAAD,CAAT;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoDG,KAApD;AACH;AACJ;;AAED,UAAUE,gBAAV,CAA2BP,MAA3B,EAAmC;AAC/B,MAAI;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,UAAM;AAAEQ,MAAAA;AAAF,QAAY,MAAMZ,IAAI,CAACE,YAAD,CAA5B;AACA,UAAM;AAAEW,MAAAA;AAAF,QAAeD,IAArB;AACA,UAAME,gBAAgB,GAAGD,OAAO,CAACE,MAAR,CAAe,CAACC,GAAD,EAAKC,IAAL,KAAc;AAClD,YAAMC,KAAK,GAAG,CACVD,IAAI,CAACE,YADK,EAEVF,IAAI,CAACG,SAFK,EAGVH,IAAI,CAACI,KAHK,EAIVJ,IAAI,CAACK,UAJK,EAKVL,IAAI,CAACM,QALK,EAMVN,IAAI,CAACO,QANK,EAOVP,IAAI,CAACQ,SAPK,CAAd;AASAT,MAAAA,GAAG,CAACU,IAAJ,CAASR,KAAT;AACA,aAAOF,GAAP;AACH,KAZwB,EAYvB,EAZuB,CAAzB;AAaA,UAAMjB,GAAG,CAAC;AAAEQ,MAAAA,IAAI,EAAEV,OAAO,CAAC8B,mBAAhB;AAAoCf,MAAAA,IAAI,EAACE;AAAzC,KAAD,CAAT;AACH,GAlBD,CAkBE,OAAOL,KAAP,EAAc;AACZ,UAAMV,GAAG,CAAC;AAAEQ,MAAAA,IAAI,EAAEV,OAAO,CAAC+B;AAAhB,KAAD,CAAT;AACAvB,IAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoDG,KAApD;AACH;AACJ;;AAED,eAAe,UAAUoB,mBAAV,GAAgC;AAC3C,QAAM/B,GAAG,CAAC,CACNG,SAAS,CAACJ,OAAO,CAACiC,iBAAT,EAA4B3B,cAA5B,CADH,EAENF,SAAS,CAACJ,OAAO,CAACkC,mBAAT,EAA8BpB,gBAA9B,CAFH,CAAD,CAAT;AAIH","sourcesContent":["import Actions from \"./entries-manager-action-constants\";\nimport { all, put, call, takeEvery } from \"redux-saga/effects\";\nimport { fetchEntries } from \"./entries-manager-api.js\";\nfunction* addEntriesSaga(action) {\n    try {\n        console.log(action);\n        yield put({ type: Actions.ADD_ENTRY_SUCCESS });\n    } catch (error) {\n        yield put({ type: Actions.ADD_ENTRY_FAILURE });\n        console.log(\"error occured while fetching entries\", error);\n    }\n}\n\nfunction* fetchEntriesSaga(action) {\n    try {\n        console.log(action);\n        const { data }  = yield call(fetchEntries);\n        const { entries }  = data\n        const formattedEntries = entries.reduce((acc,item) => {\n            const entry = [\n                item.product_name,\n                item.user_name,\n                item.taken,\n                item.created_at,\n                item.consumed,\n                item.returned,\n                item.remaining\n            ]\n            acc.push(entry);\n            return acc;\n        },[])\n        yield put({ type: Actions.FETCH_ENTRY_SUCCESS,data:formattedEntries })\n    } catch (error) {\n        yield put({ type: Actions.FETCH_ENTRY_FAILURE })\n        console.log(\"error occured while fetching entries\", error);\n    }\n}\n\nexport default function* entriesMnaagerSagas() {\n    yield all([\n        takeEvery(Actions.ADD_ENTRY_REQUEST, addEntriesSaga),\n        takeEvery(Actions.FETCH_ENTRY_REQUEST, fetchEntriesSaga)\n    ]);\n}\n"]},"metadata":{},"sourceType":"module"}